//
// Grid Framework
// -------------------------------------------------------

// Calculate grids
.calc-grid(@index, @type, @class: ~'') when (@type = width) and (@index > 0) {
    .u-width@{class}-@{index}of@{grid-columns} {
        width: percentage((@index / @grid-columns));
    }
}

// Loop grid variables
.make-grid(@index, @type, @class) when (@index >= 0) {
    .calc-grid(@index, @type, @class);
    // next iteration
    .make-grid(@index - 1, @type, @class);
}

//
// Grid mixins

// Container mixin
.make-container(@gutter: @grid-gutter-width) {
    & when (@gutter > 0) {
        padding-left: (@gutter / 2);
        padding-right: (@gutter / 2);
    }
    margin-left: auto;
    margin-right: auto;
    .clearfix();
}

// Grid mixin
.make-grid(@gutter: @grid-gutter-width) {

    & when (@use-flex-grid =true) {
        display: flex;
        clear: both;
        flex-wrap: wrap;
    }
    & when (@gutter > 0) {
        margin-left: ceil(@gutter / -2);
        margin-right: floor(@gutter / -2);
    }
    list-style: none; // Row can be used with list items
    .clearfix();
}

// Grid-column mixin
.make-grid-column(@gutter: @grid-gutter-width) {
    position: relative;
    min-height: 1px;
    & when (@gutter > 0) {
        padding-left: (@gutter / 2);
        padding-right: (@gutter / 2);
    }
    & when (@use-flex-grid =false) {
        float: left;
    }
}

// Width mixin
.width(@column: @grid-columns) {
    & when (@column >=1) {
        width: percentage((@column / @grid-columns));
    }
    & when (@column < 1) {
        width: percentage((@column));
    }
}

// Offset mixin
.offset(@offset: 1) {
    & when (@offset >=1) {
        margin-left: percentage((@offset / @grid-columns));
    }
    & when (@offset < 1) {
        margin-left: percentage((@offset));
    }
}

// Push mixin
.push(@push: 1) {
    & when (@push >=1) {
        left: percentage((@push / @grid-columns));
    }
    & when (@push < 1) {
        left: percentage((@push));
    }
    right: auto;
}

// Pull mixin
.pull(@pull: 1) {
    left: auto;
    & when (@pull >=1) {
        right: percentage((@pull / @grid-columns));
    }
    & when (@pull < 1) {
        right: percentage((@pull));
    }
}
