//
// Responsive navigation
// -------------------------------------------------------

.responsive-navigation(@boolean) when (@boolean =true) {

	body.menu-open {
		@media @nav-responsive-down {
			height: 100% !important;
			overflow: hidden !important;
		}
	}

	.nav-toggle {

		& when not (@nav-responsive-breakpoint =@breakpoint-xx-large) {
			@media @nav-responsive-up {
				display: none;
			}
		}

	}

	// Reusable .nav-responsive mixin. Defaults to 'ul' as submenu container.
	.nav-responsive(@submenuSelector: ~'ul'; ) {

		overflow-x: visible;
		-webkit-overflow-scrolling: touch; // Prevent "ul" flashing when javascript isn't loaded

		& when not (@nav-responsive-breakpoint =@breakpoint-xx-large) {
			@media @nav-responsive-down {

				&:not(.is-open) {
					display: none;
					visibility: hidden;

					&.is-open {
						overflow-y: auto;
						visibility: visible;
					}
				}
			}

			@media @nav-responsive-up {

				& {
					overflow: visible;
					visibility: visible;
				}
			}
		}

		& when (@nav-responsive-breakpoint =@breakpoint-xx-large) {
			&:not(.is-open) {
				display: none;
				visibility: hidden;

				&.is-open {
					overflow-y: auto;
					visibility: visible;
				}
			}
		}



		[aria-hidden="false"] {
			visibility: visible;
		}


		& li>@{submenuSelector}:not([aria-hidden="false"]) {
			display: none;
			visibility: hidden;
		}

		.no-js & li:hover>@{submenuSelector},
		.no-js & li:focus-within>@{submenuSelector} {
			display: block;
			visibility: visible
		}

		.hook-nav-responsive;
	}

	.nav-responsive {
		.nav-responsive();
	}

}

.responsive-navigation(@use-responsive-navigation);

// Hooks
.hook-nav-responsive() {}
