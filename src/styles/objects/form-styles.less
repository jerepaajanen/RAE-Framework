//
// Form styles
// -------------------------------------------------------
.use-form-styles(@boolean) when (@boolean =true) {
    // Fieldset with borders
    fieldset.fieldset--bordered {
        border: @fieldset-border-width @fieldset-border-style @fieldset-border-color;
        padding: @spacing-half @spacing-base @spacing-base @spacing-base;
        legend {
            padding: 0 @spacing-half;
            margin: 0 0 0 (@spacing-half * -1);
        }
    }
    // Basic styles for form elements
    input[type="date"],
    input[type="datetime"],
    input[type="datetime-local"],
    input[type="email"],
    input[type="month"],
    input[type="number"],
    input[type="password"],
    input[type="search"],
    input[type="tel"],
    input[type="text"],
    input[type="time"],
    input[type="url"],
    input[type="week"],
    textarea,
    select {
        // Removes awkward default styles on some inputs for iOS
        // Get rid of <select> arrow in FF, idea for this hack:
        // https://gist.github.com/joaocunha/6273016
        appearance: none;
        background-color: @input-background;
        background-image: none;
        border-style: solid;
        border-color: @input-border-color;
        border-width: @input-border-width;
        border-radius: @input-border-radius;
        box-shadow: @input-box-shadow;
        color: @input-color;
        font-family: @input-font-family;
        font-size: @input-font-size;
        height: @input-height;
        padding: 0 @input-horizontal-padding;
        transition: background @transition-duration-default @transition-easing-default, color @transition-duration-default @transition-easing-default, opacity @transition-duration-default @transition-easing-default, border @transition-duration-default @transition-easing-default;
        &:hover {
            border-color: @input-border-color-hover;
        }
        &:focus {
            border-color: @input-border-color-focus;
        }
    }
    textarea,
    select[multiple] {
        height: auto;
        padding-top: ((@input-height - (@input-font-size * @line-height-ratio)) / 2);
        padding-bottom: ((@input-height - (@input-font-size * @line-height-ratio)) / 2);
    }
    // Range input
    input[type=range] {
        -webkit-appearance: none;
        margin: (@range-thumb-height / 2) 0;
        .track() {
            height: @range-track-height;
            cursor: pointer;
            transition: background @transition-duration-default;
        }
        .thumb() {
            height: @range-thumb-height;
            width: @range-thumb-width;
            border-radius: @range-thumb-border-radius;
            background-color: @range-thumb-color;
            border-width: @range-thumb-border-width;
            border-color: @range-thumb-border-color;
            box-shadow: @range-thumb-box-shadow;
            cursor: pointer;
        }
        &:focus {
            outline: none;
        }
        &::-webkit-slider-runnable-track {
            .track();
            box-shadow: @range-track-box-shadow;
            background-color: @range-track-color;
            border-radius: @range-track-border-radius;
            border-width: @range-track-border-width;
            border-color: @range-track-border-color;
        }
        &::-webkit-slider-thumb {
            -webkit-appearance: none;
            .thumb();
            margin-top: ((-@range-track-border-width * 2 + @range-track-height) / 2) - (@range-thumb-height / 2);
        }
        &:focus::-webkit-slider-runnable-track {
            background-color: darken(@range-track-color, 5%);
        }
        &::-moz-range-track {
            .track();
            box-shadow: @range-track-box-shadow;
            background: @range-track-color;
            border-radius: @range-track-border-radius;
            border-width: @range-track-border-width;
            border-color: @range-track-border-color;
        }
        &::-moz-range-thumb {
            .thumb();
        }
        &::-ms-track {
            .track();
            background-color: transparent;
            border-color: transparent;
            border-width: @range-thumb-width 0;
            color: transparent;
        }
        &::-ms-fill-lower {
            background-color: darken(@range-track-color, 5%);
            border-width: @range-track-border-width;
            border-color: @range-track-border-color;
            border-radius: @range-track-border-radius*2;
            box-shadow: @range-track-box-shadow;
        }
        &::-ms-fill-upper {
            background-color: @range-track-color;
            border-width: @range-track-border-width;
            border-color: @range-track-border-color;
            border-radius: @range-track-border-radius*2;
            box-shadow: @range-track-box-shadow
        }
        &::-ms-thumb {
            .thumb();
        }
        &:focus::-ms-fill-lower {
            background-color: @range-track-color;
        }
        &:focus::-ms-fill-upper {
            background-color: darken(@range-track-color, 5%);
        }
    }
    // Select
    select:not([multiple]) {
        cursor: pointer;
        background-image: data-uri('../images/form/select.svg');
        background-position: center right;
        background-repeat: no-repeat;
        background-size: @input-height @input-height;
        &:focus:-moz-focusring {
            // Remove ugly focus in FF
            color: transparent;
            text-shadow: 0 0 0 @input-color;
        }
        &:hover,
        &:focus {
            background-image: data-uri('../images/form/select_hover.svg');
        }
    }
    // Radios and checkboxes
    .radio,
    .checkbox {
        user-select: none;
        & + & {
            margin-top: @checkbox-radio-margin; // add some spacing between checkboxes/radios
        }
        // Inline styles
        &.checkbox--inline,
        &.radio--inline {
            @media @md-up {
                display: inline-block;
                margin-top: 0; // reset margin
                margin-right: @spacing-half; // space out consecutive inline controls
            }
        }
        // Hide inputs
        input {
            display: none;
        }
        // Overwrite unstyled radios and checkboxes
        input + label {
            display: block;
        }
        // Control inputs with label
        label {
            position: relative;
            padding-left: (@checkbox-radio-size);
            text-indent: @spacing-fourth;
            line-height: @checkbox-radio-size;
            height: @checkbox-radio-size; // makes empty label possible
            &:before,
            &:after {
                content: '';
                position: absolute;
                left: 0;
                top: 0;
                width: @checkbox-radio-size;
                height: @checkbox-radio-size;
                line-height: @checkbox-radio-size;
            }
            &:before {
                background: @checkbox-radio-background;
                border: @checkbox-radio-border-width solid @input-border-color;
                box-shadow: @input-box-shadow;
                transition: border-color @transition-duration-default @transition-easing-default;
            }
            &:after {
                transform: scale(0) rotate(45deg);
                transition: transform 100ms @transition-easing-default;
            }
            &:hover::before {
                border-color: @input-border-color-hover;
            }
        }
        input:checked {
            + label:after {
                transform: scale(1) rotate(45deg);
            }
        }
    }
    // Checkbox styles
    .checkbox {
        label {
            &:before {
                border-radius: @checkbox-border-radius;
            }
            // Checked tick
            &:after {
                border: solid @checkbox-checked-color;
                border-width: 0 @checkbox-checked-width @checkbox-checked-width 0;
                height: round((@checkbox-checked-size / 1.5), 0);
                width: round((@checkbox-checked-size / 2.75), 0);
                position: absolute;
                left: @checkbox-checked-x;
                top: @checkbox-checked-y;
            }
        }
        input:checked {
            + label:before {
                & when not(@checkbox-checked-background =transparent) {
                    background: @checkbox-checked-background;
                    border-color: @checkbox-checked-background;
                    transition: all 100ms @transition-easing-default;
                }
            }
        }
    }
    // Radio styles
    .radio {
        label {
            &:before {
                border-radius: 100%;
            }
            // Checked radio
            &:after {
                background: @radio-checked-color;
                background-clip: padding-box;
                border: (@checkbox-radio-size - @radio-checked-size) solid transparent;
                border-radius: 100%;
            }
        }
    }
    // Input modifiers
    .use-input-modifiers(@boolean) when (@boolean =true) {
        // Input sizes
        input.input--small,
        select.select--small {
            height: ceil(@input-height * .8);
            .modular-scale(-1);
        }
        input.input--large,
        select.select--large {
            height: ceil(@input-height * 1.25);
            .modular-scale(1);
        }
        input.input--huge,
        select.select--huge {
            height: ceil(@input-height * 1.5);
            .modular-scale(2);
        }
        // Input variations
        input.input--underlined,
        select.select--underlined,
        textarea.textarea--underlined {
            border: 0;
            border-radius: 0;
            border-bottom: @input-border-width solid @input-border-color;
            padding-left: 0;
            padding-right: 0;
        }
        input.input--pill,
        select.select--pill {
            border-radius: 999em;
            padding-left: (@input-horizontal-padding * 2);
            padding-right: (@input-horizontal-padding * 2);
        }
        input.input--unstyled,
        select.select--unstyled,
        textarea.textarea--unstyled {
            border: 0;
            padding: 0;
            outline: 0;
            height: auto;
            background-color: transparent;
            box-shadow: none;
            &:focus,
            &:hover {
                outline: none;
                box-shadow: none;
            }
        }
        textarea.textarea--unstyled {
            resize: none;
        }
    }
    .use-input-modifiers(@use-input-modifiers);
    // Fields
    .use-form-fields(@boolean) when (@boolean =true) {
        // Field
        .field {
            display: block;
            clear: both;
            margin: 0 0 @form-field-margin 0;
            &:last-child {
                margin-bottom: 0;
            }
            > label {
                margin: 0 0 @label-vertical-margin 0;
            }
        }

        .field--inline {
            //display: flex; //
            //align-items: center; //
            label {
                display: inline-block;
                margin: 0 @label-horizontal-margin 0 0;
            }
            input,
            select {
                width: auto;
                //width: 100%; //
            }
        }
        // Field-groups, only for larger screens


        .field-group {
            margin-bottom: @spacing-base;
            @media @md-up {
                display: flex;
                align-items: center;
                flex-direction: row;
                > .field {
                    padding-left: (@grid-gutter-width / 2);
                    padding-right: (@grid-gutter-width / 2);
                    &:first-child {
                        padding-left: 0;
                    }
                    &:last-child {
                        padding-right: 0;
                    }
                }
                .field {
                    margin-bottom: 0 !important; // reset margins
                }

                &--half {
                    .field {
                        padding-left: (@grid-gutter-width / 4);
                        padding-right: (@grid-gutter-width / 4);
                    }
                }
                &--narrow {
                    .field {
                        padding-left: 1px;
                        padding-right: 1px;
                    }
                }
            }

            &:last-child,
            &:last-child .field:last-child {
                margin-bottom: 0;
            }
        }

        .field-group--inline {
            > .field {
                display: flex;
                align-items: center;
                label {
                    display: inline-block;
                    margin: 0 @label-horizontal-margin 0 0;
                }
                input,
                select {
                    //width: auto;
                }
            }
        }
        .field-group--equal-width {
            > .field {
                flex: 1 1 auto;
                input,
                select {
                    width: 100%;
                    flex: 1; // prevent line-breaks with label
                }
            }
        }
    }
    .use-form-fields(@use-form-fields);
}

.use-form-styles(@use-form-styles);
