//
// Grid
// -------------------------------------------------------
.use-grid-classes(@boolean) when (@boolean =true) {

    // Usage
    // <element class="container">
    //    <element class="grid">
    //        <element class="grid__column u-width-small-*">
    //        </element>
    //    </element>
    // </element>

    // Container
    .use-container(@boolean) when (@boolean =true) {
        .container,
        .container-fluid {
            .make-container();
        }

        // Fluid containers
        .container-fluid {
            width: @container-fluid;
            max-width: @container-fluid-max;
        }

        .container-fluid--full {
            width: @container-fluid-full;
            max-width: @container-fluid-full-max;
        }

        .container-fluid--inner {
            width: @container-fluid-inner;
            max-width: @container-fluid-inner-max;
        }

        // Fixed containers

        // Container Small (Default)
        .use-screen-small(@boolean) when (@boolean =true) {
            .container {
                width: @container-small;
            }
        }
        .use-screen-small(@use-screen-small);

        // Container Medium
        .use-screen-medium(@boolean) when (@boolean =true) {
            @media @medium-up {
                .container {
                    width: @container-medium;
                }
            }
        }
        .use-screen-medium(@use-screen-medium);

        // Container Large
        .use-screen-large(@boolean) when (@boolean =true) {
            @media @large-up {
                .container {
                    width: @container-large;
                }
            }
        }
        .use-screen-large(@use-screen-large);

        // Container Extra-Large
        .use-screen-x-large(@boolean) when (@boolean =true) {
            @media @x-large-up {
                .container {
                    width: @container-x-large;
                }
            }
        }
        .use-screen-x-large(@use-screen-x-large);
    }
    .use-container(@use-container);

    // Grid
    .use-grid(@boolean) when (@boolean =true) {
        .grid {
            .make-grid();
        }
    }
    .use-grid(@use-grid);

    // Grid-column
    .use-grid-column(@boolean) when (@boolean =true) {
        .grid__column {
            .make-grid-column(@grid-gutter-width);
            width: 100%; // Default width for mobile column
        }

        // Collapse column gutters
        .grid__column--flush {
            padding-left: 0;
            padding-right: 0;
        }
    }
    .use-grid-column(@use-grid-column);

    // Grid modifiers
    .use-grid-modifiers(@boolean) when (@boolean =true) {

        // Grid with half gutters
        .grid--half {
            margin-left: ceil(@grid-gutter-width / -4);
            margin-right: floor(@grid-gutter-width / -4);
            > .grid__column {
                padding-left: (@grid-gutter-width / 4);
                padding-right: (@grid-gutter-width / 4);
            }
        }

        // Collapse row gutters
        .grid--flush {
            margin-left: 0;
            margin-right: 0;
            > .grid__column {
                padding-left: 0;
                padding-right: 0;
            }
        }

        // Grid with equal height columns
        .grid--equal-height {
            > .grid__column {
                display: flex;
            }
            .grid {
                flex: 1;
            }
        }
    }
    .use-grid-modifiers(@use-grid-modifiers);
}

.use-grid-classes(@use-grid-classes);
