//
// Grid
// -------------------------------------------------------
.use-grid-classes(@boolean) when (@boolean =true) {

    // Usage
    // <element class="container">
    //    <element class="grid">
    //        <element class="grid__column u-width-sm-*">
    //        </element>
    //    </element>
    // </element>

    // Container

    .use-container(@boolean) when (@boolean =true) {
        .container,
        .container-fluid {
            .make-container();
        }

        // Fluid containers

        .container-fluid {
            width: @container-fluid;
            max-width: @container-fluid-max;
        }

        .container-fluid--full {
            width: @container-fluid-full;
            max-width: @container-fluid-full-max;
        }

        .container-fluid--inner {
            width: @container-fluid-inner;
            max-width: @container-fluid-inner-max;
        }


        // Fixed containers

        // Container Small (Default)

        .use-screen-sm(@boolean) when (@boolean =true) {
            .container {
                width: @container-sm;
            }
        }
        .use-screen-sm(@use-screen-sm);

        // Container Medium

        .use-screen-md(@boolean) when (@boolean =true) {
            @media @md-up {
                .container {
                    width: @container-md;
                }
            }
        }
        .use-screen-md(@use-screen-md);

        // Container Large

        .use-screen-lg(@boolean) when (@boolean =true) {
            @media @lg-up {
                .container {
                    width: @container-lg;
                }
            }
        }
        .use-screen-lg(@use-screen-lg);

        // Container Extra-Large

        .use-screen-xl(@boolean) when (@boolean =true) {
            @media @xl-up {
                .container {
                    width: @container-xl;
                }
            }
        }
        .use-screen-xl(@use-screen-xl);
    }
    .use-container(@use-container);

    // Grid

    .use-grid(@boolean) when (@boolean =true) {
        .grid {
            .make-grid();
        }
    }
    .use-grid(@use-grid);

    // Grid-column

    .use-grid-column(@boolean) when (@boolean =true) {
        .grid__column {
            .make-grid-column(@grid-gutter-width);
            width: 100%; // Default width for mobile column
        }

        // Collapse column gutters
        .grid__column--collapse {
            padding-left: 0;
            padding-right: 0;
        }
    }
    .use-grid-column(@use-grid-column);

    // Grid modifiers

    .use-grid-modifiers(@boolean) when (@boolean =true) {

        // Grid with half gutters
        .grid--half {
            margin-left: ceil(@grid-gutter-width / -4);
            margin-right: floor(@grid-gutter-width / -4);
            > .grid__column {
                padding-left: (@grid-gutter-width / 4);
                padding-right: (@grid-gutter-width / 4);
            }
        }

        // Grid with tight gutters
        .grid--tight {
            margin-left: -1px;
            margin-right: -1px;
            > .grid__column {
                padding-left: 1px;
                padding-right: 1px;
            }
        }

        // Collapse row gutters
        .grid--collapse {
            margin-left: 0;
            margin-right: 0;
            > .grid__column{
                padding-left: 0;
                padding-right: 0;
            }
        }

        .grid--collapse-deep {
            &,
            & .grid {
                margin-left: 0;
                margin-right: 0;
            }
            .grid__columnÂ {
                padding-left: 0;
                padding-right: 0;
            }
        }

        // Flex-grid only features
        & when (@use-flex-grid =true) {

            // Grid with centered columns
            .grid--centered {
                justify-content: center;
            }

            // Grid with equal height columns
            .grid--equal-height {
                > .grid__column {
                    display: flex;
                }
                .grid {
                    flex: 1;
                }
            }
        }
    }
    .use-grid-modifiers(@use-grid-modifiers);
}

.use-grid-classes(@use-grid-classes);
